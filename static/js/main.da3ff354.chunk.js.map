{"version":3,"sources":["QuoteUI.js","App.js","reportWebVitals.js","index.js"],"names":["QuoteUI","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","input","i","quotes","Friedrich Nietzsche","Alexander Hamilton","Will Rogers","Unknown","Edgar Allan Poe","Anais Nin","rerollQuote","bind","assertThisInitialized","keys","length","setState","qSpace","$","fsize","parseInt","css","height","font-size","authSpace","authSize","react_default","a","createElement","class","id","href","onClick","React","Component","App","className","src_QuoteUI","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"6QA8EeA,cAtEX,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,CACTC,MAAO,GACPC,EAAG,EACHC,OAAQ,CACJC,sBAAuB,kEACvBC,qBAAsB,kDACtBC,cAAe,gFACfC,QAAW,gDACXC,kBAAmB,2DACnBC,YAAa,2DAGrBhB,EAAKiB,YAAcjB,EAAKiB,YAAYC,KAAjBjB,OAAAkB,EAAA,EAAAlB,QAAAkB,EAAA,EAAAlB,CAAAD,KAdJA,6EAmBXG,KAAKI,MAAME,IAAMR,OAAOmB,KAAKjB,KAAKI,MAAMG,QAAQW,OAAS,EACzDlB,KAAKmB,SAAS,CACVb,EAAG,IAGPN,KAAKmB,SAAS,SAAAf,GAAK,MAAK,CACpBE,EAAGF,EAAME,EAAI,iDAWrB,IAHA,IACIc,EAASC,IAAE,mBACXC,EAAQC,SAASH,EAAOI,IAAI,cACzBJ,EAAOK,SAHE,KAIZL,EAAOI,IAAI,CAAEE,YAAaJ,MAM9B,IAHA,IACIK,EAAYN,IAAE,oBACdO,EAAWL,SAASI,EAAUH,IAAI,cAC/BG,EAAUF,SAHA,IAIbE,EAAUH,IAAI,CAAEE,YAAaE,MAEjCD,EAAUF,OANO,qCAYjB,OACII,EAAAC,EAAAC,cAAA,OAAKC,MAAM,8BACPH,EAAAC,EAAAC,cAAA,OAAKC,MAAM,cAAcC,GAAG,aACxBJ,EAAAC,EAAAC,cAAA,OAAKC,MAAM,YACPH,EAAAC,EAAAC,cAAA,MAAIE,GAAG,OAAOD,MAAM,gCAApB,IAAqDhC,KAAKI,MAAMG,OAAOT,OAAOmB,KAAKjB,KAAKI,MAAMG,QAAQP,KAAKI,MAAME,IAAjH,KACAuB,EAAAC,EAAAC,cAAA,MAAIE,GAAG,SAASD,MAAM,wBAAtB,IAA+ClC,OAAOmB,KAAKjB,KAAKI,MAAMG,QAAQP,KAAKI,MAAME,KAE7FuB,EAAAC,EAAAC,cAAA,OAAKC,MAAM,UACPH,EAAAC,EAAAC,cAAA,KAAGE,GAAG,cAAcD,MAAM,gCAAgCE,KAAK,oCAA/D,SAGAL,EAAAC,EAAAC,cAAA,UAAQE,GAAG,YAAYD,MAAM,4BAA4BG,QAASnC,KAAKc,aAAvE,qBAhEFsB,IAAMC,WCQbC,MARf,WACI,OACIT,EAAAC,EAAAC,cAAA,OAAKQ,UAAU,OACXV,EAAAC,EAAAC,cAACS,EAAD,QCEGC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAA7B,KAAA,UAAqB+B,KAAK,SAAAC,GAAiD,IAA9CC,EAA8CD,EAA9CC,OAAQC,EAAsCF,EAAtCE,OAAQC,EAA8BH,EAA9BG,OAAQC,EAAsBJ,EAAtBI,OAAQC,EAAcL,EAAdK,QAC3DJ,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAQV,MCDDW,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACH5B,EAAAC,EAAAC,cAACF,EAAAC,EAAM4B,WAAP,KACE7B,EAAAC,EAAAC,cAAC4B,EAAD,QAOJlB","file":"static/js/main.da3ff354.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './App.css';\r\nimport ReactDOM from 'react-dom';\r\nimport $ from 'jquery';\r\n\r\n\r\n\r\nclass QuoteUI extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            input: '',\r\n            i: 0,\r\n            quotes: {\r\n                'Friedrich Nietzsche': 'That which is done out of love, is always beyond good and evil.',\r\n                'Alexander Hamilton': 'Those who stand for nothing, fall for everyting',\r\n                'Will Rogers': 'Even if you\\'re on the right track, you\\'ll get ran over if you just sit there.',\r\n                'Unknown': 'If you can\\'t beat the fear, just do it scared',\r\n                'Edgar Allan Poe': 'Years of love have been forgot in the hatred of a minute',\r\n                'Anais Nin': 'Life shrinks or expands in proportion to one\\'s courage'\r\n            }\r\n        };\r\n        this.rerollQuote = this.rerollQuote.bind(this);\r\n\r\n    };\r\n\r\n    rerollQuote() {\r\n        if (this.state.i === Object.keys(this.state.quotes).length - 1) {\r\n            this.setState({\r\n                i: 0\r\n            });\r\n        } else {\r\n            this.setState(state => ({\r\n                i: state.i + 1\r\n            }));\r\n        };\r\n\r\n    };\r\n\r\n\r\n    componentDidMount() {\r\n        var maxHeight = 250;\r\n        var qSpace = $('.quoteContainer');\r\n        var fsize = parseInt(qSpace.css('font-size'));\r\n        while (qSpace.height() > maxHeight) {\r\n            qSpace.css({ 'font-size': fsize-- })\r\n        };\r\n\r\n        var authHeight = 50;\r\n        var authSpace = $('.authorContainer');\r\n        var authSize = parseInt(authSpace.css('font-size'));\r\n        while (authSpace.height() > authHeight) {\r\n            authSpace.css({ 'font-size': authSize-- })\r\n        };\r\n        authSpace.height(authHeight);\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n            <div class='container-fluid backCenter'>\r\n                <div class='frontCenter' id='quote-box'>\r\n                    <div class='quoteTop'>\r\n                        <h2 id='text' class='quoteContainer animated fade'>\"{this.state.quotes[Object.keys(this.state.quotes)[this.state.i]]}\"</h2>\r\n                        <h2 id='author' class='authorContainer fade'>-{Object.keys(this.state.quotes)[this.state.i]}</h2>\r\n                    </div>\r\n                    <div class='botRow'>\r\n                        <a id='tweet-quote' class=\"twitter-share-button tweetbtn\" href=\"https://twitter.com/intent/tweet\">\r\n                            Tweet\r\n                        </a>\r\n                        <button id='new-quote' class='btn btn-default rerollbtn' onClick={this.rerollQuote}>Re-roll</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n}\r\nexport default QuoteUI;","import React from 'react';\nimport './App.css';\nimport QuoteUI from './QuoteUI';\nimport ReactDOM from 'react-dom';\n\n\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <QuoteUI />\n        </div>\n    );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}